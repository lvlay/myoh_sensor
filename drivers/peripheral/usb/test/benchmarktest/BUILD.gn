# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("./../../usb.gni")

module_output_path = "drivers_peripheral_usb/usb"

ohos_benchmarktest("hdf_usb_benchmark_function_test") {
  module_out_path = module_output_path

  include_dirs = []

  sources = [ "usb_benchmark_function_test.cpp" ]

  deps = [
    "${usb_driver_path}/hdi_service:libusb_interface_service_1.1",
    "//third_party/benchmark",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_usb:libusb_proxy_1.0",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
    if (usb_c_utils_enable) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "ipc:ipc_single" ]
}

ohos_benchmarktest("hdf_usb_benchmark_device_test") {
  module_out_path = module_output_path

  include_dirs = [ "../UsbSubscriberTest" ]

  sources = [
    "../UsbSubscriberTest/UsbSubscriberTest.cpp",
    "usb_benchmark_device_test.cpp",
  ]

  deps = [
    "${usb_driver_path}/hdi_service:libusb_interface_service_1.1",
    "//third_party/benchmark",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_usb:libusb_proxy_1.0",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
    if (usb_c_utils_enable) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "ipc:ipc_single" ]
}

ohos_benchmarktest("hdf_usb_benchmark_request_test") {
  module_out_path = module_output_path

  include_dirs = [ "../UsbSubscriberTest" ]

  sources = [
    "../UsbSubscriberTest/UsbSubscriberTest.cpp",
    "usb_benchmark_request_test.cpp",
  ]

  deps = [
    "${usb_driver_path}/hdi_service:libusb_interface_service_1.1",
    "//third_party/benchmark",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_usb:libusb_proxy_1.0",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
    if (usb_c_utils_enable) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "ipc:ipc_single" ]
}

ohos_benchmarktest("hdf_usb_benchmark_transfer_test") {
  module_out_path = module_output_path

  include_dirs = [ "../UsbSubscriberTest" ]

  sources = [
    "../UsbSubscriberTest/UsbSubscriberTest.cpp",
    "usb_benchmark_transfer_test.cpp",
  ]

  deps = [
    "${usb_driver_path}/hdi_service:libusb_interface_service_1.1",
    "//third_party/benchmark",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_usb:libusb_proxy_1.1",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
    if (usb_c_utils_enable) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "ipc:ipc_single" ]
}

group("hdf_usb_benchmark") {
  testonly = true
  deps = [
    ":hdf_usb_benchmark_device_test",
    ":hdf_usb_benchmark_function_test",
    ":hdf_usb_benchmark_request_test",
    ":hdf_usb_benchmark_transfer_test",
  ]
}
