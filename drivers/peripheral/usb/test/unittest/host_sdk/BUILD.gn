# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/test.gni")
} else {
  import("//build/config/sanitizers/sanitizers.gni")
  import("//build/test.gni")
  import("./../../../../../hdf_core/adapter/uhdf2/uhdf.gni")
}

if (defined(ohos_lite)) {
  unittest("usb_host_sdk_test") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/hdf"
    include_dirs = [
      "//third_party/googletest/googletest/include",
      "//third_party/bounds_checking_function/include",
      "./../../../../../../base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    ]

    sources = [ "./liteos/hdf_usb_test.cpp" ]
    public_deps = [
      "./../../../../../../base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "./../../../../../hdf_core/adapter/uhdf/manager:hdf_core",
      "./../../../../../hdf_core/adapter/uhdf/platform:hdf_platform",
      "./../../../../../hdf_core/adapter/uhdf/posix:hdf_posix_osal",
      "./../../../../../hdf_core/adapter/uhdf/test/unittest/common:hdf_test_common",
      "//third_party/bounds_checking_function:libsec_shared",
    ]
    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]
  }
  unittest("usb_host_sdk_io_test") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/hdf"
    include_dirs = [
      "//third_party/googletest/googletest/include",
      "//third_party/bounds_checking_function/include",
      "./../../../../../../base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    ]

    sources = [ "./liteos/hdf_usb_io_test.cpp" ]
    public_deps = [
      "./../../../../../../base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "./../../../../../hdf_core/adapter/uhdf/manager:hdf_core",
      "./../../../../../hdf_core/adapter/uhdf/platform:hdf_platform",
      "./../../../../../hdf_core/adapter/uhdf/posix:hdf_posix_osal",
      "./../../../../../hdf_core/adapter/uhdf/test/unittest/common:hdf_test_common",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]
  }
  unittest("usb_host_raw_test") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/hdf"
    include_dirs = [
      "//third_party/googletest/googletest/include",
      "//third_party/bounds_checking_function/include",
      "./../../../../../../base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    ]

    sources = [ "./liteos/hdf_usb_raw_test.cpp" ]
    public_deps = [
      "./../../../../../../base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "./../../../../../hdf_core/adapter/uhdf/manager:hdf_core",
      "./../../../../../hdf_core/adapter/uhdf/platform:hdf_platform",
      "./../../../../../hdf_core/adapter/uhdf/posix:hdf_posix_osal",
      "./../../../../../hdf_core/adapter/uhdf/test/unittest/common:hdf_test_common",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]
  }
  unittest("usb_host_raw_io_test") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/hdf"
    include_dirs = [
      "//third_party/googletest/googletest/include",
      "//third_party/bounds_checking_function/include",
      "./../../../../../../base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    ]

    sources = [ "./liteos/hdf_usb_raw_io_test.cpp" ]
    public_deps = [
      "./../../../../../../base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "./../../../../../hdf_core/adapter/uhdf/manager:hdf_core",
      "./../../../../../hdf_core/adapter/uhdf/platform:hdf_platform",
      "./../../../../../hdf_core/adapter/uhdf/posix:hdf_posix_osal",
      "./../../../../../hdf_core/adapter/uhdf/test/unittest/common:hdf_test_common",
      "//third_party/bounds_checking_function:libsec_shared",
    ]

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]
  }
} else {
  module_output_path = "hdf/usb"
  ohos_unittest("usb_host_sdk_if_test") {
    module_out_path = module_output_path
    include_dirs = [
      "./../../../ddk/common/include",
      "./../../../ddk/device/include",
      "./../../../ddk/host/include",
      "./../../../interfaces/ddk/common",
      "./../../../interfaces/ddk/host",
      "./../../../interfaces/ddk/device",
      "./../host_sdk",
    ]

    sources = [ "./usb_host_sdk_if_test.cpp" ]

    deps = [ "./../../../ddk:libusb_core" ]

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
      ]
      if (usb_c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }

  ohos_unittest("usb_raw_sdk_if_test") {
    module_out_path = module_output_path
    include_dirs = [
      "./../../../ddk/common/include",
      "./../../../ddk/host/include",
      "./../../../interfaces/ddk/common",
      "./../../../interfaces/ddk/host",
      "./../../../interfaces/ddk/device",
      "./../host_sdk",
    ]

    sources = [ "./usb_raw_sdk_if_test.cpp" ]

    deps = [ "./../../../ddk:libusb_core" ]

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
      ]
      if (usb_c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }

  ohos_unittest("usb_host_sdk_if_test_io") {
    module_out_path = module_output_path
    include_dirs = [
      "./../../../ddk/common/include",
      "./../../../ddk/device/include",
      "./../../../ddk/host/include",
      "./../../../interfaces/ddk/common",
      "./../../../interfaces/ddk/host",
      "./../../../interfaces/ddk/device",
      "./../host_sdk",
    ]

    sources = [ "./usb_host_sdk_if_test_io.cpp" ]

    deps = [ "./../../../ddk:libusb_core" ]

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
      ]
      if (usb_c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }

  ohos_unittest("usb_raw_sdk_if_test_io") {
    module_out_path = module_output_path
    include_dirs = [
      "./../../../ddk/common/include",
      "./../../../ddk/host/include",
      "./../../../interfaces/ddk/common",
      "./../../../interfaces/ddk/host",
      "./../../../interfaces/ddk/device",
      "./../../../test/unittest/host_sdk",
    ]

    sources = [ "./usb_raw_sdk_if_test_io.cpp" ]

    deps = [ "./../../../ddk:libusb_core" ]

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
      ]
      if (usb_c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }
  group("hdf_unittest_usb_host") {
    testonly = true
    deps = [
      ":usb_host_sdk_if_test",
      ":usb_host_sdk_if_test_io",
      ":usb_raw_sdk_if_test",
      ":usb_raw_sdk_if_test_io",
    ]
  }
}
