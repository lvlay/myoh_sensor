# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("../../battery.gni")

ohos_shared_library("libbattery_interface_service_2.0") {
  include_dirs = [
    "include",
    "../include",
    "../../utils/include",
  ]
  sources = [
    "src/battery_config.cpp",
    "src/battery_interface_impl.cpp",
    "src/battery_thread.cpp",
    "src/power_supply_provider.cpp",
  ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_battery:libbattery_stub_2.0",
      "hdf_core:libpub_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
      "jsoncpp:jsoncpp",
    ]
    if (has_battery_config_policy_part) {
      external_deps += [ "config_policy:configpolicy_util" ]
    }
    if (has_battery_c_utils_part) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
      "jsoncpp:jsoncpp",
    ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_battery"
}

##############################################################################################

ohos_shared_library("libbattery_driver") {
  include_dirs = [
    "include",
    "../include",
    "../../utils/include",
    "../../charger/led",
  ]
  sources = [ "src/battery_interface_driver.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "drivers_interface_battery:libbattery_stub_2.0",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
      "jsoncpp:jsoncpp",
    ]
    if (has_battery_c_utils_part) {
      external_deps += [ "c_utils:utils" ]
    }
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
      "jsoncpp:jsoncpp",
    ]
  }

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_battery"
}

group("hdf_battery") {
  deps = [
    ":libbattery_driver",
    ":libbattery_interface_service_2.0",
    "profile:battery_config",
  ]
}
