# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../distributedaudio.gni")

ohos_shared_library("libaudio_manager_daudio_primary_service_1.0") {
  include_dirs = [
    "${hdf_ser_aud_path}/include",
    "${hdf_service_path}/hdi_service/common/include",
    "${hdf_service_path}/hdi_service/common/log/include",
    "${hdf_service_path}/hdi_service/common/utils/include",
  ]

  if (drivers_peripheral_distributed_audio_extension) {
    include_dirs +=
        [ "${distributedaudio_ext_path}/hdf_service_extension/include/" ]
  }

  sources = [
    "./src/audio_adapter_interface_impl.cpp",
    "./src/audio_capture_interface_impl.cpp",
    "./src/audio_manager_interface_impl.cpp",
    "./src/audio_render_interface_impl.cpp",
  ]

  if (drivers_peripheral_distributed_audio_extension) {
    sources += [
      "${distributedaudio_ext_path}/hdf_service_extension/src/audio_capture_ext_impl.cpp",
      "${distributedaudio_ext_path}/hdf_service_extension/src/audio_render_ext_impl.cpp",
    ]
  }

  public_deps = [ "${hdf_service_path}/hdi_service/common:libdaudio_hdf_utils" ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "drivers_interface_distributed_audio:libdaudio_stub_1.0",
    "drivers_interface_distributed_audio:libdaudioext_stub_2.0",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  if (drivers_peripheral_distributed_audio_extension) {
    cflags = [ "-DDAUDIO_SUPPORT_EXTENSION" ]
  }

  defines = [
    "HI_LOG_ENABLE",
    "LOG_DOMAIN=0xD004130",
  ]

  if (build_variant == "root") {
    defines += [
      "DUMP_CAPTURE_FILE",
      "DUMP_RENDER_FILE",
    ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_distributed_audio"
}

ohos_shared_library("libdaudio_primary_driver") {
  include_dirs = [ "${hdf_ser_aud_path}/include" ]

  sources = [ "./src/audio_driver.cpp" ]

  deps = [ "${hdf_ser_aud_path}:libaudio_manager_daudio_primary_service_1.0" ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_distributed_audio:libdaudio_stub_1.0",
    "drivers_interface_distributed_audio:libdaudioext_stub_2.0",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_distributed_audio"
}

group("hdf_daudio_primary_service") {
  deps = [
    ":libaudio_manager_daudio_primary_service_1.0",
    ":libdaudio_primary_driver",
  ]
}
