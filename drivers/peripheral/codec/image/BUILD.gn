# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_shared_library("libcodec_image_service_2.0") {
  include_dirs = [
    "../utils/include",
    "config/",
    "hdi_service/include",
    "heif/include",
    "jpeg/include",
    "vdi",
  ]
  sources = [
    "config/codec_image_config.cpp",
    "hdi_service/src/codec_image_service.cpp",
    "heif/src/codec_heif_encode_service.cpp",
    "jpeg/src/codec_jpeg_core.cpp",
    "jpeg/src/codec_jpeg_service.cpp",
  ]
  defines = [ "LOG_TAG_IMAGE" ]
  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_codec:libimage_proxy_2.0",
      "graphic_surface:buffer_handle",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "hitrace:hitrace_meter",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_codec"
}

ohos_shared_library("libcodec_image_driver") {
  include_dirs = [
    "../utils/include",
    "config/",
    "hdi_service/include",
  ]

  sources = [ "hdi_service/src/codec_image_driver.cpp" ]

  deps = [ ":libcodec_image_service_2.0" ]

  defines = [ "LOG_TAG_IMAGE" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_codec:libimage_stub_2.0",
      "graphic_surface:buffer_handle",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_codec"
  shlib_type = "hdi"
}

group("codec_image_service") {
  deps = [
    ":libcodec_image_driver",
    ":libcodec_image_service_2.0",
  ]
}
