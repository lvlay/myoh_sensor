# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")

ohos_unittest("codec_hdi_jpeg_test") {
  module_out_path = "drivers_peripheral_codec/codec"

  sources = [ "codec_hdi_jpeg_test.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_codec:libimage_proxy_2.0",
      "drivers_interface_display:libdisplay_buffer_hdi_impl",
      "drivers_interface_display:libdisplay_buffer_proxy_1.0",
      "drivers_interface_display:libdisplay_composer_hdi_impl",
      "drivers_interface_display:libdisplay_composer_proxy_1.0",
      "graphic_surface:buffer_handle",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}

ohos_unittest("codec_hdi_heif_encode_test") {
  module_out_path = "drivers_peripheral_codec/codec"

  sources = [ "codec_hdi_heif_encode_test.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_codec:libimage_proxy_2.0",
      "drivers_interface_display:display_buffer_idl_headers_1.2",
      "drivers_interface_display:display_composer_idl_headers_1.2",
      "drivers_interface_display:libdisplay_buffer_hdi_impl_v1_2",
      "drivers_interface_display:libdisplay_composer_hdi_impl_1.2",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}

group("codec_hdi_image_test") {
  testonly = true
  deps = [
    ":codec_hdi_heif_encode_test",
    ":codec_hdi_jpeg_test",
  ]
}
