# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")

# NOSORT
import("../../../camera.gni")

# NOSORT
import("$hdf_core_path/adapter/uhdf2/uhdf.gni")
module_output_path = "drivers_peripheral_camera/camera"
camera_include_path = "//drivers/peripheral/camera/test/hdi/"

config("hdf_camera_benchmark_test_config") {
  visibility = [ ":*" ]
  cflags_cc = [
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-DCOLORSPACE=\"videoconvert\"",
  ]
  cflags_cc += [ "-std=c++17" ]
}

ohos_benchmarktest("hdf_camera_benchmark_test") {
  module_out_path = module_output_path

  sources = [
    "./src/benchmark_common.cpp",
    "./src/camera_benchmark_test.cpp",
  ]

  include_dirs = [
    "./include/",
    "$camera_include_path/v1_0/include/",
    "//third_party/googletest/googletest/include",
    "$camera_path/../../../display/interfaces/include",
    "$camera_path/../../../display/hdi_service/gralloc/include",
    "$camera_path/../../interfaces/include",
    "$camera_path/include",
  ]

  deps = [
    "//third_party/benchmark",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_camera:libcamera_proxy_1.0",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [
    "drivers_interface_camera:libbuffer_producer_sequenceable_1.0",
    "drivers_interface_camera:metadata",
    "graphic_surface:surface",
    "samgr:samgr_proxy",
  ]
  public_configs = [ ":hdf_camera_benchmark_test_config" ]
}
