# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../camera.gni")
camera_test_path = "//drivers/peripheral/camera/test/hdi/"

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../../../hdf_core/adapter/uhdf2/uhdf.gni")

module_output_path = "drivers_peripheral_camera/drivers_peripheral_camera"

config("camhdi_device_config") {
  visibility = [ ":*" ]
  cflags_cc = [
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-DCOLORSPACE=\"videoconvert\"",
  ]
}

ohos_fuzztest("camera_device_fuzztest") {
  testonly = true
  module_out_path = module_output_path
  fuzz_config_file = "$camera_path/../../test/fuzztest/camera_device"
  sources = [
    "../common/src/common.cpp",
    "./camera_device_fuzzer.cpp",
  ]

  include_dirs = [
    # common includes
    "../common/include",
    "$camera_test_path/v1_2/include",
    "$camera_path/../../interfaces/include",
    "$camera_path/include",
  ]
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  external_deps += [
    "drivers_interface_camera:libbuffer_producer_sequenceable_1.0",
    "drivers_interface_camera:libcamera_proxy_1.2",
    "drivers_interface_camera:libcamera_proxy_1.3",
    "drivers_interface_camera:metadata",
    "graphic_surface:surface",
    "samgr:samgr_proxy",
  ]
  public_configs = [ ":camhdi_device_config" ]
}

group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    # dep file
    ":camera_device_fuzztest",
  ]
}
