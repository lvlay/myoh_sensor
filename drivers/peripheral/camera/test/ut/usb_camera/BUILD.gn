# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../vdi_base/usb_camera/camera_usb.gni")

import("//build/test.gni")
import("../../../../../hdf_core/adapter/uhdf2/uhdf.gni")

module_output_path = "drivers_peripheral_camera/camera"

config("camera_ut_test_config") {
  visibility = [ ":*" ]

  cflags_cc = [ "--coverage" ]

  ldflags = [ "--coverage" ]
}
ohos_unittest("camera_usb_test_ut") {
  testonly = true
  module_out_path = module_output_path
  sources = [
    "$usb_hal_test_path/ut/v4l2/stream_customer.cpp",
    "$usb_hal_test_path/ut/v4l2/usb_camera_test_mult.cpp",
    "./test_camera_base.cpp",
    "./usb_camera_test.cpp",
  ]

  include_dirs = [
    # common includes
    "$third_path/googletest/googletest/include",
    "$camera_path_usb/../../../display/interfaces/include",
    "$camera_path_usb/../../../display/hdi_service/gralloc/include",

    # camera common includes
    "$camera_path_vdi/include",
    "$camera_path_usb/../../interfaces/include",
    "$camera_path_usb/../../interfaces/hdi_ipc",
    "$camera_path_vdi/utils/event",
    "$camera_path_usb/../../interfaces/hdi_ipc/utils/include",
    "$camera_path_usb/../../interfaces/hdi_ipc/callback/host/include",
    "$camera_path_usb/../../interfaces/hdi_ipc/callback/device/include",
    "$camera_path_usb/../../interfaces/hdi_ipc/callback/operator/include",
    "$camera_path_vdi_test/common/callback/include",
    "$camera_path_vdi_test/ut/v4l2",

    # device manager includes
    "$camera_path_vdi/device_manager/include",

    # buffer manager includes
    "$camera_path_usb/buffer_manager/include",
    "$camera_path_usb/buffer_manager/src/buffer_adapter/standard",

    # pipeline core includes
    "$camera_path_vdi/pipeline_core",
    "$camera_path_vdi/pipeline_core/host_stream/include",
    "$camera_path_vdi/pipeline_core/utils",
    "$camera_path_vdi/pipeline_core/nodes/include",
    "$camera_path_vdi/pipeline_core/nodes/src/node_base",
    "$camera_path_vdi/pipeline_core/nodes/src/sink_node",
    "$camera_path_vdi/pipeline_core/nodes/src/sensor_node",
    "$camera_path_vdi/pipeline_core/nodes/src/merge_node",
    "$camera_path_vdi/pipeline_core/nodes/src/dummy_node",
    "$camera_path_vdi/pipeline_core/pipeline_impl/include",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src",
    "$camera_path_vdi/pipeline_core/include",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/builder",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/dispatcher",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/parser",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/strategy",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/strategy/config",
    "$camera_path_vdi/pipeline_core/ipp/include",

    # vdi impl includes
    "camera_path_vdi/../v4l2",
    "camera_path_vdi/../v4l2/include",
    "camera_path_vdi/../v4l2/include/camera_host",
    "camera_path_vdi/../v4l2/include/camera_device",
    "camera_path_vdi/../v4l2/include/stream_operator",
    "camera_path_vdi/../v4l2/include/offline_stream_operator",
    "camera_path_vdi/../v4l2/src/stream_operator/stream_tunnel/standard",

    # metadata manager includes
    "$camera_path_vdi/metadata_manager/include",
  ]

  deps = [
    "$camera_path_usb/buffer_manager:usb_camera_buffer_manager",
    "$camera_path_usb/device_manager:usb_camera_device_manager",
    "$camera_path_usb/pipeline_core:usb_camera_pipeline_core",
    "$camera_path_usb/vdi_impl:camera_daemon_static",
    "$third_path/googletest:gmock_main",
    "$third_path/googletest:gtest",
    "$third_path/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_camera:libbuffer_producer_sequenceable_1.0",
    "drivers_interface_camera:libcamera_proxy_1.0",
    "drivers_interface_camera:libcamera_stub_1.0",
    "drivers_interface_camera:metadata",
    "graphic_surface:surface",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  public_configs = [ ":camera_ut_test_config" ]
}
