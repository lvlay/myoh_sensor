# Copyright (c) 2021 - 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../hdf_core/adapter/uhdf2/uhdf.gni")
import("../camera.gni")

config("hdi_cif_config") {
  visibility = [ ":*" ]

  cflags = [
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
  ]

  ldflags = [ "-Wl" ]
}

ohos_shared_library("hdi_cif") {
  sources = [
    "$camera_path/../interfaces/hdi_cpp/callback/device/src/camera_device_callback_proxy.cpp",
    "$camera_path/../interfaces/hdi_cpp/callback/host/src/camera_host_callback_proxy.cpp",
    "$camera_path/../interfaces/hdi_cpp/callback/operator/src/stream_operator_callback_proxy.cpp",
    "$camera_path/../interfaces/hdi_cpp/server/src/camera_device_stub.cpp",
    "$camera_path/../interfaces/hdi_cpp/server/src/camera_host_driver.cpp",
    "$camera_path/../interfaces/hdi_cpp/server/src/camera_host_stub.cpp",
    "$camera_path/../interfaces/hdi_cpp/server/src/offline_stream_operator_stub.cpp",
    "$camera_path/../interfaces/hdi_cpp/server/src/stream_operator_stub.cpp",
    "./src/buffer_producer_wrapper.cpp",
    "./src/camera_device.cpp",
    "./src/camera_device_callback_wrapper.cpp",
    "./src/camera_host.cpp",
    "./src/camera_host_callback_wrapper.cpp",
    "./src/offline_stream_operator.cpp",
    "./src/stream_operator.cpp",
    "./src/stream_operator_callback_wrapper.cpp",
  ]

  include_dirs = [
    "$camera_path/../interfaces/include",
    "$camera_path/../interfaces/hdi_cpp/client/include",
    "$camera_path/../interfaces/hdi_cpp/server/include",
    "$camera_path/../interfaces/hdi_cpp/callback/host/include",
    "$camera_path/../interfaces/hdi_cpp/callback/device/include",
    "$camera_path/../interfaces/hdi_cpp/callback/operator/include",
    "$camera_path/include",
    "$camera_path/hdi_cif/include",
    "$camera_path/hdi_cif/src/include",
  ]

  deps = []

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [
    "drivers_interface_camera:metadata",
    "ipc:ipc_single",
  ]

  public_configs = [ ":hdi_cif_config" ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_camera"
}
