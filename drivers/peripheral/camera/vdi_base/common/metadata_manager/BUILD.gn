# Copyright (c) 2022 - 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../camera.gni")

if (!defined(ohos_lite)) {
  import("//build/ohos.gni")
  import("../../../../../hdf_core/adapter/uhdf2/uhdf.gni")

  config("camera_metadata_manager_config") {
    visibility = [ ":*" ]
    cflags = [
      "-DGST_DISABLE_DEPRECATED",
      "-DHAVE_CONFIG_H",
    ]

    if (enable_camera_device_utest) {
      cflags += [
        "-fprofile-arcs",
        "-ftest-coverage",
      ]

      ldflags += [ "--coverage" ]
    }

    include_dirs = [ "./include" ]
  }

  ohos_shared_library("peripheral_camera_metadata_manager") {
    defines = []
    if (drivers_peripheral_camera_feature_usb) {
      defines += [ "CAMERA_BUILT_ON_USB" ]
    }
    sources = [
      "$camera_path/dump/src/camera_dump.cpp",
      "$camera_path/metadata_manager/src/metadata_config.cpp",
      "$camera_path/metadata_manager/src/metadata_controller.cpp",
    ]
    include_dirs = [
      "$camera_path/../../interfaces/include",
      "$camera_path/device_manager/include",
      "$camera_path/metadata_manager/include",
      "$camera_path/dump/include",
      "$camera_path/../interfaces",
    ]

    deps = [ "$camera_path/device_manager:peripheral_camera_device_manager" ]

    if (is_standard_system) {
      external_deps = [
        "graphic_surface:surface",
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hdf_core:libhdi",
        "hilog:libhilog",
        "ipc:ipc_single",
      ]
      if (use_hitrace) {
        external_deps += [ "hitrace:hitrace_meter" ]
      }
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [
      "bounds_checking_function:libsec_shared",
      "drivers_interface_camera:libbuffer_producer_sequenceable_1.0",
      "drivers_interface_camera:metadata",
      "ipc:ipc_single",
    ]

    public_configs = [ ":camera_metadata_manager_config" ]
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_camera"
  }

  ohos_shared_library("camera_example_vendor_tag_impl") {
    install_enable = false
    cflags = [
      "-fPIC",
      "-Wall",
    ]
    cflags_cc = cflags
    include_dirs = [ "./include" ]
    sources = [ "src/camera_example_vendor_tags.cpp" ]
    external_deps = [ "drivers_interface_camera:metadata" ]

    part_name = "drivers_peripheral_camera"
    subsystem_name = "hdf"
  }
}
