# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

ohos_shared_library("libchip_controller_chip_interface_service_1.0") {
  include_dirs = []

  sources = [
    "hdi_sync_util.cpp",
    "iface_tool.cpp",
    "iface_util.cpp",
    "wifi.cpp",
    "wifi_ap_iface.cpp",
    "wifi_chip.cpp",
    "wifi_chip_modes.cpp",
    "wifi_p2p_iface.cpp",
    "wifi_sta_iface.cpp",
    "wifi_vendor_hal.cpp",
    "wifi_vendor_hal_list.cpp",
    "wifi_vendor_hal_stubs.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_wlan:chip_idl_headers",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  deps = []

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_wlan"
}

ohos_shared_library("libchip_hdi_driver") {
  include_dirs = []

  sources = [ "chip_controller_driver.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  external_deps += [ "drivers_interface_wlan:libchip_stub_1.0" ]

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_wlan"
}

group("hdi_chip_service") {
  deps = [
    ":libchip_controller_chip_interface_service_1.0",
    ":libchip_hdi_driver",
  ]
}
