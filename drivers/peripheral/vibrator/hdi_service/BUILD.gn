# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../vibrator.gni")

if (defined(ohos_lite)) {
  group("hdf_vibrator_service") {
    deps = []
    public_configs = []
  }
} else {
  ohos_shared_library("libvibrator_interface_service_1.3") {
    include_dirs = [
      "../interfaces/include/",
      ".",
      "../interfaces/v1_1/",
      "../utils/include",
    ]
    sources = [ "vibrator_if_service.cpp" ]

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]

    if (is_standard_system) {
      external_deps = [
        "drivers_interface_vibrator:libvibrator_stub_1.3",
        "hdf_core:libhdf_host",
        "hilog:libhilog",
        "hitrace:hitrace_meter",
        "ipc:ipc_single",
      ]
      if (c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [
        "hilog:libhilog",
        "ipc:ipc_single",
      ]
    }

    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_vibrator"
  }

  ohos_shared_library("libvibrator_driver") {
    include_dirs = [
      "../interfaces/include/",
      "../utils/include",
    ]
    sources = [ "vibrator_if_driver.cpp" ]

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
      "-fsigned-char",
      "-fno-common",
      "-fno-strict-aliasing",
    ]

    if (is_standard_system) {
      external_deps = [
        "drivers_interface_vibrator:libvibrator_stub_1.1",
        "drivers_interface_vibrator:libvibrator_stub_1.2",
        "drivers_interface_vibrator:libvibrator_stub_1.3",
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hdf_core:libhdi",
        "hilog:libhilog",
        "ipc:ipc_single",
      ]
      if (c_utils_enable) {
        external_deps += [ "c_utils:utils" ]
      }
    } else {
      external_deps = [
        "hilog:libhilog",
        "ipc:ipc_single",
      ]
    }

    shlib_type = "hdi"
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_vibrator"
  }

  group("hdf_vibrator_service") {
    deps = [
      ":libvibrator_driver",
      ":libvibrator_interface_service_1.3",
    ]
  }
}
