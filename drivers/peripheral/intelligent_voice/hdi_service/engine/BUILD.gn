# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../intelligent_voice.gni")

ohos_shared_library("intell_voice_engine_manager_service_1.2") {
  include_dirs = [
    "../../interfaces",
    "../../utils",
  ]

  sources = [
    "intell_voice_engine_adapter_impl.cpp",
    "intell_voice_engine_manager_impl.cpp",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_intelligent_voice:intell_voice_engine_idl_headers",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_intelligent_voice"
}

ohos_shared_library("intell_voice_engine_driver") {
  include_dirs = [ "../../utils" ]

  sources = [ "intell_voice_engine_driver.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_intelligent_voice:libintell_voice_engine_stub_1.0",
      "drivers_interface_intelligent_voice:libintell_voice_engine_stub_1.1",
      "drivers_interface_intelligent_voice:libintell_voice_engine_stub_1.2",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  shlib_type = "hdi"
  install_enable = true
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_intelligent_voice"
}

group("hdi_intell_voice_engine_service") {
  deps = [
    ":intell_voice_engine_driver",
    ":intell_voice_engine_manager_service_1.2",
    "etc:intelligent_voice_engine_cfg",
  ]

  if (drivers_peripheral_intelligent_voice_feature_community) {
    deps += [ "../../passthrough:vendor_intell_voice_engine" ]
  }
}
