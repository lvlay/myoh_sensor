# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hdf_fuzztest_path = "./../.."
hdf_audio_path = "./../../../.."

import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("$hdf_audio_path/audio.gni")

module_output_path = "drivers_peripheral_audio/drivers_peripheral_audio"

ohos_fuzztest("AudioLibAudioBindserviceCaptureFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "../audiolibaudiobindservicecapture_fuzzer"

  include_dirs = []
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "../../common/src/audio_adm_fuzzer_common.cpp",
    "audiolibaudiobindservicecapture_fuzzer.cpp",
  ]
  include_dirs = [
    "$hdf_audio_path/supportlibs/adm_adapter/include",
    "$hdf_audio_path/hal/hdi_passthrough/include",
    "$hdf_audio_path/interfaces/include",
    "./",
    "$hdf_fuzztest_path/common/include",
  ]
  external_deps = [ "hdf_core:libhdf_utils" ]
  if (defined(ohos_lite)) {
    external_deps += [ "hilog_lite:hilog_share" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
  if (enable_c_utils) {
    external_deps += [ "c_utils:utils" ]
  }
  external_deps += [ "bounds_checking_function:libsec_shared" ]
  defines = []
  if (enable_audio_adm_passthrough) {
    defines += [ "AUDIO_ADM_SO" ]
  }
  if (enable_audio_adm_service) {
    defines += [ "AUDIO_ADM_SERVICE" ]
  }
}
