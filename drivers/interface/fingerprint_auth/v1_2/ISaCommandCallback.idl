/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup HdfFingerprintAuth
 * @{
 *
 * @brief Provides APIs for the fingerprint auth driver.
 *
 * The fingerprint auth driver provides a unified interface for the fingerprint auth service to access the fingerprint auth driver.
 * After obtaining the face auth driver proxy, the service can call related APIs to obtain executors.
 * After obtaining the face auth executors, the service can call related APIs to get executor information, get
 * template information, and enroll, authenticate, and delete templates, etc.
 *
 * @since 5.0
 */

/**
 * @file ISaCommandCallback.idl
 *
 * @brief Defines the callback for an async API, which can be used to send command to SA. See {@link IExecutor}.
 *
 * @since 5.0
 */

package ohos.hdi.fingerprint_auth.v1_2;

import ohos.hdi.fingerprint_auth.v1_2.FingerprintAuthTypes;

/**
 * @brief Defines the callback for an async API, which can be used to send command to SA. See {@link IExecutor}.
 *
 * @since 5.0
 * @version 1.2
 */
[callback] interface ISaCommandCallback {
    /**
     * @brief Defines the function for sa commands in process. 
     *
     * @param commands Indicates sa commands. See {@link SaCommand}.
     *
     * @return Returns <b>0</b> if the operation is successful.
     * @return Returns a non-zero value if the operation fails.
     *
     * @since 5.0
     * @version 1.2
     */
    OnSaCommands([in] struct SaCommand[] commands);
}
/** @} */