/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup Distributed Audio
 * @{
 *
 * @brief Provides APIs for communication between drivers and SA of distributed audio.
 *
 * The Distributed Audio module includes operations on distributed audio devices,
 * stream operations, and various callbacks. Communicate with Source SA through the IDAudioCallback
 * and IDAudioManager interfaces to achieve distributed functionality.
 *
 * @since 5.0
 * @version 2.0
 */

package ohos.hdi.distributed_audio.audioext.v2_0;

/**
 * @brief Enumerates the mode of port operation.
 *
 * @since 5.0
 * @version 2.0
 */
enum PortOperationMode {
    NORMAL_MODE = 0,
    MMAP_MODE = 1,
};

/**
 * @brief Enumerates the audio parameters.
 *
 * @since 5.0
 * @version 2.0
 */
struct AudioParameter {
    unsigned int format;
    unsigned int channelCount;
    unsigned int sampleRate;
    unsigned int period;
    unsigned int frameSize;
    unsigned int streamUsage;
    enum PortOperationMode renderFlags;
    enum PortOperationMode capturerFlags;
    String ext;
};

/**
 * @brief Defines audio frame data.
 *
 * @since 5.0
 * @version 2.0
 */
struct AudioData {
    struct AudioParameter param;
    byte[] data;
};

/**
 * @brief Defines the notification event of distributed audio.
 *
 * @since 5.0
 * @version 2.0
 */
struct DAudioEvent {
    int type;
    String content;
};

/**
 * @brief Defines the timestamp of distributed audio.
 *
 * @since 5.0
 * @version 2.0
 */
struct CurrentTime {
    long tvSec;
    long tvNSec;
};