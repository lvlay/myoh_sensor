# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License..

template("interface") {
  if (is_standard_system) {
    import("//drivers/hdf_core/adapter/uhdf2/hdi.gni")
    hdi(target_name) {
      # the default value of system is "full"
      # the default value generator mode is "ipc", the optional values are "ipc" or "passthrough"
      # the default value of language is "cpp", the optional values are "c" or "cpp"
      forward_variables_from(invoker, "*")
    }
  } else if (is_small_system) {
    import("//drivers/hdf_core/adapter/uhdf/hdi_small.gni")
    hdi_small(target_name) {
      # the default value of system is "lite"
      # the default value generator mode is "passthrough", the optional values is "passthrough"
      # the default value of language is "c", the optional values are "c" or "cpp"
      forward_variables_from(invoker, "*")
    }
  } else if (is_mini_system) {
    import("//drivers/hdf_core/adapter/khdf/liteos_m/hdi_mini.gni")
    hdi_mini(target_name) {
      # the default value of system is "mini"
      # the default value generator mode is "low", the optional values is "low"
      # the default value of language is "c", the optional values are "c"
      forward_variables_from(invoker,
                             "*",
                             [
                               "subsystem_name",
                               "part_name",
                             ])
    }
  }
}
