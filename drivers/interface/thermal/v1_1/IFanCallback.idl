/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup thermal
 * @{
 *
 * @brief Provides APIs for managing, controlling, and subscribing to the device temperature.
 *
 * The thermal module provides APIs for the thermal service to manage, control, and subscribe to the device temperature.
 * After obtaining an object or proxy of this module, the thermal service can invoke related APIs to manage, control,
 * and subscribe to the device temperature.
 *
 * @since 4.0
 * @version 1.1
 */

/**
 * @file IFanCallback.idl
 *
 * @brief Provides the callback of fan fault detect.
 *
 * provides the callback for the thermal service to obtain device temperature and fan speed changes.
 *
 * @since 4.0
 * @version 1.1
 */

package ohos.hdi.thermal.v1_1;

import ohos.hdi.thermal.v1_1.ThermalTypes;

/**
 * @brief Represents the callback of fan status changes.
 *
 * After creating a callback object, the thermal service can call {@link IThermalInterface} to register a callback to
 * subscribe to fan status changes.
 *
 * @since 4.0
 */
[callback] interface IFanCallback {
    /**
     * @brief Callback of fan status changes.
     *
     * @param event Fan information of the device, including device temperature and fan speed.
     * @see HdfThermalCallbackInfo
     *
     * @since4.0
     */
    OnFanDataEvent([in] struct HdfThermalCallbackInfo event);
}
/** @} */
