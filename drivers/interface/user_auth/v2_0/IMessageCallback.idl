/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup HdfUserAuth
 * @{
 *
 * @brief Provides APIs for the user_auth driver.
 *
 * The user_auth driver provides a unified interface for the user_auth service to access the user_auth driver.
 * After obtaining the user_auth driver proxy, the service can call related APIs to register executors,
 * manage credentials, and complete password and biometric authentication.
 * @since 5.0
 * @version 1.0
 */

/**
 * @file IMessageCallback.idl
 *
 * @brief Defines the callback for an async API, which can be used to send message to framework.
 *
 * @since 5.0
 * @version 1.0
 */

package ohos.hdi.user_auth.v2_0;

/**
 * @brief  Defines the callback for an async API, which can be used to send message to framework.
 *
 * @since 5.0
 * @version 1.0
 */
[callback] interface IMessageCallback {
    /**
     * @brief Defines the function for reporting message.
     *
     * @param scheduleId Indicates the schedule ID of the message.
     * @param destRole is the role of destination.
     * @param msg is the message content.
     *
     * @return Returns <b>0</b> if the operation is successful.
     * @return Returns a non-zero value if the operation fails.
     */
    OnMessage([in] unsigned long scheduleId, [in] int destRole, [in] unsigned char[] msg);
}
/** @} */