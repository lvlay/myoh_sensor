/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
 * @addtogroup HdfUserAuth
 * @{
 *
 * @brief Provides APIs for the user_auth driver.
 *
 * The user_auth driver provides a unified interface for the user_auth service to access the user_auth driver.

 *
 * @since5.0 
 */

 /**
 * @file UserAuthTypes.idl
 *
 * @brief Defines the enumeration values and data structures of the user_auth driver.
 *
 * @since 5.0
 */

package ohos.hdi.user_auth.v1_3;

import ohos.hdi.user_auth.v1_2.UserAuthTypes;

/**
* @brief Define credential enrollment ID information.
*
* @since 5.0
* @version 1.3
*/
struct EnrolledState {
    /** Desensitization Enrolled ID. */
    unsigned short credentialDigest;

    /** Number of Credential. */
    unsigned short credentialCount;
};

/**
 * @brief Request information of reused unlock result.
 *
 * @since 5.0
 * @version 1.3
 */
struct ReuseUnlockInfo {
    /** User ID. */
    int userId;
    /** Authentication trust level. */
    unsigned int authTrustLevel;
    /** Authentication type. See @{AuthType}. */
    enum AuthType[] authTypes;
    /** Challenge of the authentication. */
    unsigned char[] challenge;
    /** Caller name. */
    String callerName;
    /** Caller Type. */
    int callerType;
    /** Calling api version. */
    int apiVersion;
    /** The allowable reuse duration. */
    unsigned long reuseUnlockResultDuration;
    /** Reuse unlock result mode. */
    unsigned int reuseUnlockResultMode;
};

/** @} */