/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup HdiDrm
 * @
 * @brief Defines APIs of the Drm module.
 * The Drm module provides APIs for multimedia Drm.
 * @since 4.1
 * @version 1.0
 */

/**
 * @file IMediaKeySession.idl
 *
 * @brief Defines methods used in MediaKeySession.
 * @since 4.1
 * @version 1.0
 */


package ohos.hdi.drm.v1_0;

import ohos.hdi.drm.v1_0.MediaKeySystemTypes;
import ohos.hdi.drm.v1_0.IMediaKeySessionCallback;
import ohos.hdi.drm.v1_0.IMediaDecryptModule;

interface IMediaKeySession {
    GenerateMediaKeyRequest([in] struct MediaKeyRequestInfo mediaKeyRequestInfo, [out] struct MediaKeyRequest mediaKeyRequest);
    ProcessMediaKeyResponse([in] unsigned char[] mediaKeyResponse, [out] unsigned char[] mediaKeyId);
    CheckMediaKeyStatus([out] Map<String, String> mediaKeyStatus);
    ClearMediaKeys();

    GetOfflineReleaseRequest([in] unsigned char[] mediaKeyId, [out] unsigned char[] releaseRequest);
    ProcessOfflineReleaseResponse([in] unsigned char[] mediaKeyId, [in] unsigned char[] response);
    RestoreOfflineMediaKeys([in] unsigned char[] mediaKeyId);

    GetContentProtectionLevel([out] enum ContentProtectionLevel level);
    RequiresSecureDecoderModule([in] String mimeType, [out] boolean required);

    SetCallback([in] IMediaKeySessionCallback sessionCallback);
    GetMediaDecryptModule([out] IMediaDecryptModule decryptModule);

    Destroy();
};
