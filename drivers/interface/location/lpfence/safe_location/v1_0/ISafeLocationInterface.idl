/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
 * @addtogroup HdiLpfenceSafeLocation
 * @{
 *
 * @brief Provides safe location APIs for the safe location service.
 *
 * @since 5.0
 * @version 1.0
 */

/**
 * @file ISafeLocationInterface.idl
 *
 * @brief Declares the callbacks for the safe location module.
 *
 * @since 5.0
 * @version 1.0
 */

/**
 * @brief Declares the path of the safe location module interface package.
 *
 * @since 5.0
 */
package ohos.hdi.location.lpfence.safe_location.v1_0;

/**
 * @brief Imports data types of the safe location module.
 *
 * @since 5.0
 */
import ohos.hdi.location.lpfence.safe_location.v1_0.SafeLocationTypes;

/**
 * @brief Imports callbacks of the safe location module.
 *
 * @since 5.0
 */
import ohos.hdi.location.lpfence.safe_location.v1_0.ISafeLocationCallback;

/**
 * @brief Provides APIs for basic safe location operations.
 *
 * You can use the APIs to register or unregister a callback
 */
interface ISafeLocationInterface {
    /**
     * @brief Registers a callback.
     *
     * Before enabling the safe location feature, you need to register a callback to report the device has obtained the safe location information.
     *
     * @param callbackObj Indicates the callback to register, which needs to be registered only once. For details, see {@link ISafeLocCallback}.
     *
     * @return Returns <b>0</b> if the operation is successful.
     * @return Returns a negative value if the operation fails.
     *
     * @since 5.0
     * @version 1.0
     */
    RegisterSafeLocationCallback([in] ISafeLocationCallback callbackObj);

    /**
     * @brief Unregisters a callback.
     *
     * When the safe location feature is no longer required or the registered callback needs to be changed, you need to unregister the callback.
     *
     * @param callbackObj Indicates the callback to unregister, which needs to be unregistered only once. For details, see {@link ISafeLocationCallback}.
     *
     * @return Returns <b>0</b> if the operation is successful.
     * @return Returns a negative value if the operation fails.
     *
     * @since 5.0
     * @version 1.0
     */
    UnregisterSafeLocationCallback([in] ISafeLocationCallback callbackObj);

    /**
     * @brief Obtains the latest safe location information.
     *
     *
     * @return Returns <b>0</b> if the operation is successful.
     * @return Returns a negative value if the operation fails.
     *
     * @since 5.0
     * @version 1.0
     */
    GetSafeLocationSwitch([in] int mode);
}
/** @} */
