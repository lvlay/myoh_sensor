# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("./../../uhdf2/uhdf.gni")

HDF_FRAMEWORK_PATH = "./../../../framework"

config("hdf_test_common_pub_config") {
  visibility = [ ":*" ]

  include_dirs = [ "$HDF_FRAMEWORK_PATH/test/unittest/include" ]
}
if (defined(ohos_lite)) {
  HDF_ADAPTER_PATH = "./../../../adapter"
  ohos_shared_library("libhdf_test_common") {
    subsystem_name = "hdf"
    part_name = "hdf_core"
    output_extension = "z.so"
    sources = [ "$HDF_FRAMEWORK_PATH/test/unittest/common/hdf_common_test.c" ]

    include_dirs = [
      "//third_party/bounds_checking_function/include",
      "$HDF_FRAMEWORK_PATH/include/platform",
      "$HDF_FRAMEWORK_PATH/include/core",
      "$HDF_FRAMEWORK_PATH/include/osal",
      "$HDF_FRAMEWORK_PATH/include/utils",
      "$HDF_ADAPTER_PATH/uhdf/posix/include",
      "$HDF_FRAMEWORK_PATH/test/unittest/include",
    ]

    ldflags = [
      "-lstdc++",
      "-lm",
      "-pthread",
    ]

    deps = [
      "$HDF_ADAPTER_PATH/uhdf/manager:hdf_core",
      "$HDF_ADAPTER_PATH/uhdf/posix:hdf_posix_osal",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
    ]
    public_deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  }
} else {
  ohos_shared_library("libhdf_test_common") {
    public_configs = [ ":hdf_test_common_pub_config" ]
    sources = [ "$HDF_FRAMEWORK_PATH/test/unittest/common/hdf_common_test.c" ]

    include_dirs = [ "$HDF_FRAMEWORK_PATH/test/unittest/include" ]

    defines = [ "__OHOS__USER__" ]
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "hdf_core"
    if (is_standard_system) {
      deps = [ "../../uhdf2/utils:libhdf_utils" ]
      external_deps = [
        "c_utils:utils",
        "hilog:libhilog",
      ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }
}
