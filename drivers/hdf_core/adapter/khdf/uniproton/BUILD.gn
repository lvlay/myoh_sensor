# Copyright (c) 2023 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("hdf.gni")

HDF_FRAMEWORKS_PATH = "./../../../framework"
HDF_INTERFACE_PATH = ".../../../interfaces"
HDF_ADAPTER_PATH = ".../../../adapter"

hdf_driver("hdf_lite") {
  deps = [
    "core",
    "osal",
    "platform",
    HDF_ADAPTER_PLATFORM_PATH,
  ]
  if (defined(LOSCFG_DRIVERS_HDF_TESTS_ENABLE)) {
    deps += [ "test" ]
  }
}

config("public") {
  configs = [
    "core:public",
    "osal:public",
    "platform:public",
  ]
}

config("hdf_config") {
  configs = [ ":public" ]
  include_dirs = [
    "//utils/native/lite/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    "osal/include",
    "$HDF_FRAMEWORKS_PATH/include",
    "$HDF_FRAMEWORKS_PATH/include/osal",
    "$HDF_FRAMEWORKS_PATH/include/utils",
    "$HDF_FRAMEWORKS_PATH/utils/include",
    "$HDF_FRAMEWORKS_PATH/include/platform",
    "$HDF_FRAMEWORKS_PATH/include/core",
    "$HDF_FRAMEWORKS_PATH/support/platform/include",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/common",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/fwk",
    "$HDF_FRAMEWORKS_PATH/core/host/include",
    "$HDF_FRAMEWORKS_PATH/core/manager/include",
    "$HDF_FRAMEWORKS_PATH/core/shared/include",
    "$HDF_FRAMEWORKS_PATH/core/common/include/manager",
    "$HDF_FRAMEWORKS_PATH/core/common/include/host",
    "$HDF_FRAMEWORKS_PATH/core/adapter/vnode/include",
    "$HDF_FRAMEWORKS_PATH/core/adapter/syscall/include",
    "$HDF_FRAMEWORKS_PATH/test/unittest/osal",
    "$HDF_ADAPTER_PATH/khdf/uniproton/osal/include",
    "$HDF_ADAPTER_PATH/khdf/uniproton/test/sample_driver/include",
    "$HDF_ADAPTER_PATH/uhdf2/include/host",
    "$HDF_INTERFACE_PATH/inner_api/core",
    "$HDF_INTERFACE_PATH/inner_api/utils",
    "$HDF_INTERFACE_PATH/inner_api/osal/shared",
    "$HDF_INTERFACE_PATH/inner_api/host/shared",
  ]
}
