# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
#
# HDF is dual licensed: you can use it either under the terms of
# the GPL, or the BSD license, at your option.
# See the LICENSE file in the root of this repository for complete details.

import("//build/config/features.gni")
import("//build/test.gni")
module_output_path = "hdf_core/hdf_core"

hdf_framework_path = "./../../../../../framework"
hdf_adapter_path = "./../../../../../adapter"

ohos_fuzztest("UnregisterServiceStatusListenerFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file = "$hdf_framework_path/test/fuzztest/servmgr_cpp_fuzzer/unregisterservicestatuslistener_fuzzer"

  include_dirs = [
    "$hdf_framework_path/test/fuzztest/servmgr_cpp_fuzzer/unregisterservicestatuslistener_fuzzer",
    "$hdf_adapter_path/uhdf2/include/hdi",
    "$hdf_adapter_path/uhdf2/osal/include",
    "$hdf_framework_path/include/utils",
    "//commonlibrary/c_utils/base/include",
  ]
  sources = [ "unregisterservicestatuslistener_fuzzer.cpp" ]

  deps = []

  if (is_standard_system) {
    deps += [
      "../../../../../adapter/uhdf2/hdi:libhdi",
      "../../../../../adapter/uhdf2/ipc:libhdf_ipc_adapter",
      "../../../../../adapter/uhdf2/utils:libhdf_utils",
    ]
    external_deps = [
      "c_utils:utils",
      "hilog:libhilog",
      "ipc:ipc_single",
      "samgr:samgr_proxy",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
      "samgr:samgr_proxy",
    ]
  }
}

group("fuzztest") {
  testonly = true
  deps = [ ":UnregisterServiceStatusListenerFuzzTest" ]
}
